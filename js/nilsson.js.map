{
  "version": 3,
  "file": "nilsson.js",
  "sourceRoot": "..",
  "sources": [
    "coffee\\nilsson.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "nilsson_version = \"1.5\" # getParameters with 0 parameters fixed \n\n# chai visar listinnehåll på ett bra sätt. \n# _.isEqual(a,b) fungerar också men det blir sämre listutskrifter\nassert = (a, b, msg='Assert failure') -> chai.assert.deepEqual a, b, msg\n\nfixColor = (args) ->\n\tn = args.length\n\ta = 1\n\t[r,g,b] = [args[0],args[0],args[0]] if n == 1\n\t[r,g,b,a] = [args[0],args[0],args[0],args[1]] if n == 2\n\t[r,g,b] = args if n == 3\n\t[r,g,b,a] = args if n == 4\n\treturn color 255 * r, 255 * g, 255 * b, 255 * a\n\nfc = -> if arguments.length == 0 then noFill() else fill fixColor arguments\nsc = -> if arguments.length == 0 then noStroke() else stroke fixColor arguments\nbg = -> background fixColor arguments\nsw = (n) -> strokeWeight n\ncircle = (x,y,r) -> ellipse x,y,2*r,2*r\nrd = (degrees) -> rotate radians degrees\nprint = console.log\nrange = _.range # from underscore.coffee\nmerp = (y1,y2,i,x1=0,x2=1) -> map i,x1,x2,y1,y2\n\ngetParameters = (h = window.location.href) -> \n\tarr = h.split('?')\n\tif arr.length != 2 then return {}\n\ts = arr[1]\n\tif s=='' then return {}\n\t_.object(f.split '=' for f in s.split('&'))\nassert getParameters('http:\\\\christernilsson.github.io\\Shortcut\\www'), {}\nassert getParameters('http:\\\\christernilsson.github.io\\Shortcut\\www?'), {}\nassert getParameters('http:\\\\christernilsson.github.io\\Shortcut\\www?a=0&b=1'), {'a':'0', 'b':'1'}\n\ncompare = (a,b) ->\n\tif typeof a == \"object\" and typeof b == \"object\"\n\t\tfor i in range Math.min a.length,b.length\n\t\t\tc = compare a[i],b[i]\n\t\t\tif c != 0 then return c\n\telse\n\t\treturn (if a > b then -1 else (if a < b then 1 else 0))\n\t0\nassert compare(12,13), 1\nassert compare(12,12), 0\nassert compare(13,12), -1\nassert compare([1,11],[1,2]), -1\nassert compare([1,11],[1,11]), 0\nassert compare([1,2],[1,11]), 1\nassert compare([1,'11'],[1,'2']), 1\nassert compare([1,'11'],[1,'11']), 0\nassert compare([1,'2'],[1,'11']), -1\n\nbsort = (list,cmp=compare) ->\n\tfor i in range list.length\n\t\tfor j in range list.length-1\n\t\t\t[list[j], list[j+1]] = [list[j+1], list[j]] if cmp(list[j], list[j+1]) < 0\n\tlist\nassert bsort([1,8,2],compare), [1,2,8]\nassert bsort([1,8,2],compare), [1,2,8]\nassert bsort([[1],[8],[2]],compare), [[1],[2],[8]]\nassert bsort([[2,1],[2,8],[2,2]],compare), [[2,1],[2,2],[2,8]]\nassert bsort([[1,8], [1,7], [1,9]],compare), [[1,7], [1,8], [1,9]]\nassert bsort([3,2,4,1], compare), [1,2,3,4]\n\n"
  ]
}